name: Falcon AI - Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget curl git

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install external security tools
      run: |
        # Install Go for tools that require it
        wget -q https://golang.org/dl/go1.21.0.linux-amd64.tar.gz
        sudo tar -C /usr/local -xzf go1.21.0.linux-amd64.tar.gz
        export PATH=$PATH:/usr/local/go/bin
        
        # Install Subfinder
        go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest
        
        # Install Katana
        go install -v github.com/projectdiscovery/katana/cmd/katana@latest
        
        # Add Go bin to PATH
        echo "export PATH=\$PATH:\$HOME/go/bin" >> ~/.bashrc

    - name: Create required directories
      run: |
        mkdir -p logs output data/models data/payloads data/wordlists config

    - name: Run installation test
      run: |
        python test_installation.py

    - name: Run basic functionality tests
      run: |
        python test_falcon.py

    - name: Test CLI help
      run: |
        python main.py --help

    - name: Test basic scan (dry run)
      run: |
        python main.py scan --url https://httpbin.org/get --dry-run

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v3

    - name: Build Docker image
      run: |
        docker build -t falcon-ai:test .

    - name: Test Docker container
      run: |
        docker run --rm falcon-ai:test --help

    - name: Test Docker scan
      run: |
        docker run --rm falcon-ai:test scan --url https://httpbin.org/get --dry-run

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Run Bandit Security Linter
      run: |
        pip install bandit
        bandit -r . -f json -o bandit-report.json || true

    - name: Run Safety Check
      run: |
        pip install safety
        safety check --json --output safety-report.json || true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
