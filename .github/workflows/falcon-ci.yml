name: Falcon AI - Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget curl git

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt || pip install -r requirements-minimal.txt || pip install colorama aiohttp pyyaml

    - name: Setup Go for external tools
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install external security tools
      run: |
        # Install Go-based tools
        go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest
        go install -v github.com/projectdiscovery/katana/cmd/katana@latest
        
        # Add Go bin to PATH
        echo "$HOME/go/bin" >> $GITHUB_PATH

    - name: Create required directories
      run: |
        mkdir -p logs output data/models data/payloads data/wordlists config

    - name: Create basic config
      run: |
        echo "general:" > config/falcon.yaml
        echo "  timeout: 10" >> config/falcon.yaml
        echo "  threads: 5" >> config/falcon.yaml

    - name: Run installation test
      run: |
        python test_installation.py || echo "Installation test had issues but continuing..."

    - name: Test CLI help
      run: |
        python main.py --help

    - name: Test basic functionality
      run: |
        python -c "import sys; sys.path.insert(0, '.'); from core.config import config; print('Config loaded successfully')"

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker build -t falcon-ai:test .

    - name: Test Docker container help
      run: |
        docker run --rm falcon-ai:test --help

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run Bandit Security Linter
      run: |
        bandit -r . -f json -o bandit-report.json || true
      continue-on-error: true

    - name: Run Safety Check
      run: |
        safety check --json --output safety-report.json || true
      continue-on-error: true

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
