name: Falcon AI - Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget curl git

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt

    - name: Create required directories
      run: |
        mkdir -p logs output data/models data/payloads data/wordlists config

    - name: Create basic config file
      run: |
        cp config/falcon.yaml config/test.yaml || echo "general:\n  timeout: 10\n  threads: 1" > config/test.yaml

    - name: Run installation test
      run: |
        python test_installation.py
      continue-on-error: true

    - name: Test CLI help
      run: |
        python main.py --help

    - name: Test version command
      run: |
        python main.py --version || echo "Version command not implemented yet"
      continue-on-error: true

    - name: Test basic scan functionality
      run: |
        timeout 30 python main.py scan --url https://httpbin.org/get --timeout 5 --threads 1 || echo "Basic scan test completed"
      continue-on-error: true

  basic-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install minimal dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-minimal.txt || pip install colorama pyyaml requests

    - name: Test imports
      run: |
        python -c "
        try:
            import main
            print('✅ Main module imports successfully')
        except Exception as e:
            print(f'❌ Import error: {e}')
            exit(1)
        "

    - name: Test basic CLI
      run: |
        python main.py --help

  docker:
    runs-on: ubuntu-latest
    needs: basic-tests

    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker build -t falcon-ai:test .

    - name: Test Docker container help
      run: |
        docker run --rm falcon-ai:test --help

    - name: Test Docker imports
      run: |
        docker run --rm falcon-ai:test -c "python -c 'import main; print(\"Docker imports working\")'"

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run Bandit Security Linter
      run: |
        bandit -r . -f json -o bandit-report.json --skip B101,B601 || true

    - name: Run Safety Check
      run: |
        safety check --json --output safety-report.json || true

    - name: Check for secrets
      run: |
        echo "Checking for potential secrets..."
        grep -r -i "password\|secret\|key\|token" --include="*.py" . || echo "No obvious secrets found"

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
      if: always()
