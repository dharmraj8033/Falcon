name: Falcon AI - Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install minimal dependencies
      run: |
        python -m pip install --upgrade pip
        pip install colorama aiohttp pyyaml requests

    - name: Create required directories
      run: |
        mkdir -p logs output data/models data/payloads data/wordlists config

    - name: Create basic config
      run: |
        cat > config/falcon.yaml << EOF
        general:
          timeout: 10
          threads: 5
        scanning:
          default_modules: ['xss', 'sqli']
        ai_engine:
          confidence_threshold: 0.7
        output:
          default_format: 'txt'
        logging:
          level: 'INFO'
        EOF

    - name: Test basic imports
      run: |
        python -c "import sys; sys.path.insert(0, '.'); from cli.banner import print_banner; print('✅ Banner import successful')"
        python -c "import sys; sys.path.insert(0, '.'); from core.config import config; print('✅ Config loaded successfully')"
        python -c "import sys; sys.path.insert(0, '.'); from ai_engine.ai_core import AIEngine; print('✅ AI Engine import successful')"

    - name: Test CLI help
      run: |
        timeout 30 python main.py --help || echo "Help command completed"

    - name: Run basic tests
      run: |
        python test_falcon.py

  quick-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Quick installation test
      run: |
        pip install colorama aiohttp pyyaml
        mkdir -p config logs output
        echo "general: {timeout: 10}" > config/falcon.yaml
        python test_installation.py || echo "Test completed with expected warnings"

  docker:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: quick-test

    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker build -t falcon-ai:test .

    - name: Test Docker container help
      run: |
        timeout 30 docker run --rm falcon-ai:test --help || echo "Docker test completed"

  security:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run Bandit Security Linter
      run: |
        bandit -r . -f json -o bandit-report.json --skip B404,B603,B607 || true
      continue-on-error: true

    - name: Run Safety Check (basic)
      run: |
        pip freeze | safety check --stdin || true
      continue-on-error: true

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
